package test;

import com.github.tomakehurst.wiremock.client.WireMock;
import com.github.tomakehurst.wiremock.junit.WireMockRule;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;

import org.hamcrest.Matcher;
import org.hamcrest.Matchers;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;

import static com.github.tomakehurst.wiremock.client.WireMock.*;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

public class Mystub {

	@Rule
	public WireMockRule wireMockRule = new WireMockRule(8888);
	public String BaseURI = "http://www.urlficticia.com.br/";
	public String gerar_token, content1, fileJson1 = "./src/test/gerar_token.json";
	public String criar_emprestimo, content2, fileJson2 = "./src/test/criar_emprestimo.json";
	public String consultar_emprestimo, content3, fileJson3 = "./src/test/consultar_emprestimo.json";

	@Before
	public void stubService() throws IOException {
		gerar_token = new String(Files.readAllBytes(Paths.get(fileJson1)));
		WireMock.configureFor("localhost", wireMockRule.port());
		WireMock.reset();
		stubFor(get(urlEqualTo("/api/v1/token/")).willReturn(aResponse().withStatus(200).withBody(gerar_token)));

		System.out.println("Set the breakpoint here !!!");
	}

	@org.junit.Test
	public void validateJsonGerarToken() {

		// Server is up
		RestAssured.given().when().get("http://localhost:8888/api/v1/token/").then().assertThat().statusCode(200);
		
		String json = get("/lotto").asString()
				List<String> winnderIds = from(json).get("lotto.winners.winnerId");
		
		
	}

}